{"version":3,"sources":["components/QueryPart.jsx","redux/actions.js","components/ItemPart.jsx","components/ListPart.jsx","App.js","redux/state.js","redux/reducers.js","redux/store.js","index.js"],"names":["QueryPart","props","handleNameChange","bind","handleTagChange","event","this","updateNameForSearch","target","value","updateTagForSearch","id","type","placeholder","onChange","nameForSearch","tagForSearch","React","Component","connect","state","newName","newTag","ItemPart","styObj1","display","styObj2","tagVal","handleClick","getAverage","handleEnter","getFilteredList","studentEmail","toggleShowMore","numArr","sum","x","length","Number","email","keyCode","alert","currentTagArr","studentInfo","tags","toUpperCase","setState","addTag","filteredList1","filteredList2","studentArr","queryName","queryTag","firstName","includes","lastName","push","y","tagArr","z","filteredList","className","map","student","index","key","src","pic","alt","company","skill","grades","onClick","showMore","style","grade","i","tag","tag_index","onKeyUp","emailMark","tagContent","ListPart","App","makeRequest","dispatch","getState","axios","get","then","response","data","students","updateState","catch","error","console","log","initialState","myReducer","previousState","action","nextState","studentObj","city","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reduxStore","createStore","applyMiddleware","myThunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.4abf95e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/query-part.css';\r\nimport { connect } from 'react-redux';\r\nimport { updateNameForSearch, updateTagForSearch } from '../redux/actions.js';\r\n\r\nclass QueryPart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleTagChange = this.handleTagChange.bind(this);\r\n    }\r\n    handleNameChange(event) {\r\n        this.props.updateNameForSearch(event.target.value);\r\n    }\r\n    handleTagChange(event) {\r\n        this.props.updateTagForSearch(event.target.value);\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"inputContainer\">\r\n                <input type=\"text\" placeholder=\"search by name\" id=\"name-input\" onChange={this.handleNameChange} value={this.props.nameForSearch} />\r\n                <input type=\"text\" placeholder=\"search by tag\" id=\"tag-input\" onChange={this.handleTagChange} value={this.props.tagForSearch} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    nameForSearch: state.nameForSearch,\r\n    tagForSearch: state.tagForSearch\r\n}), {\r\n    updateNameForSearch,\r\n    updateTagForSearch\r\n})(QueryPart);","import axios from 'axios';\r\n\r\nexport function updateNameForSearch(newName) {\r\n    return {\r\n        type: \"UPDATE_NAME_FOR_SEARCH\",\r\n        newName: newName\r\n    };\r\n}\r\n\r\nexport function updateTagForSearch(newTag) {\r\n    return {\r\n        type: \"UPDATE_TAG_FOR_SEARCH\",\r\n        newTag: newTag\r\n    };\r\n}\r\n\r\nexport function toggleShowMore(email) {\r\n    return {\r\n        type: \"TOGGLE_SHOW_MORE\",\r\n        emailMark: email\r\n    };\r\n}\r\n\r\nexport function addTag(email, tagContent) {\r\n    return {\r\n        type: \"ADD_TAG\",\r\n        emailMark: email,\r\n        tagContent: tagContent\r\n    };\r\n}\r\n\r\nexport function updateState(studentArr) {\r\n    return {\r\n        type: \"UPDATE_STATE\",\r\n        studentArr: studentArr\r\n    };\r\n}\r\n\r\nexport function makeRequest() {\r\n    return function (dispatch, getState) {\r\n        axios.get('https://raw.githubusercontent.com/glv1at118/student-system-api/master/students.json')\r\n            .then(function (response) {\r\n                // retrieves the student info array & dispatch a sync action-creator\r\n                let studentArr = response.data.students;\r\n                dispatch(updateState(studentArr));\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n}","import React from 'react';\r\nimport '../styles/item-part.css';\r\nimport { connect } from 'react-redux';\r\nimport { toggleShowMore, addTag } from '../redux/actions.js';\r\n\r\nclass ItemPart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            styObj1: {\r\n                display: \"none\"\r\n            },\r\n            styObj2: {\r\n                display: \"block\"\r\n            },\r\n            tagVal: \"\"\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.getAverage = this.getAverage.bind(this);\r\n        this.handleEnter = this.handleEnter.bind(this);\r\n        this.handleTagChange = this.handleTagChange.bind(this);\r\n        this.getFilteredList = this.getFilteredList.bind(this);\r\n    }\r\n    handleClick(studentEmail) {\r\n        this.props.toggleShowMore(studentEmail);\r\n    }\r\n    getAverage(numArr) {\r\n        let sum = 0;\r\n        for (let x = 0; x < numArr.length; x++) {\r\n            sum = sum + Number(numArr[x]);\r\n        }\r\n        let avg = sum / numArr.length;\r\n        return avg;\r\n    }\r\n    handleEnter(email, event) {\r\n        if (event.keyCode === 13) {\r\n            if (event.target.value === \"\") {\r\n                alert(\"You cannot submit an empty tag!\");\r\n                return;\r\n            } else {\r\n                let currentTagArr = null;\r\n                for (let x = 0; x < this.props.studentInfo.length; x++) {\r\n                    if (this.props.studentInfo[x].email === email) {\r\n                        currentTagArr = this.props.studentInfo[x].tags;\r\n                        break;\r\n                    }\r\n                }\r\n                for (let x = 0; x < currentTagArr.length; x++) {\r\n                    if (currentTagArr[x].toUpperCase() === event.target.value.toUpperCase()) {\r\n                        alert(\"The tag already exists in the redux store!\");\r\n                        this.setState({\r\n                            tagVal: \"\"\r\n                        });\r\n                        return;\r\n                    }\r\n                }\r\n                this.props.addTag(email, event.target.value);\r\n                this.setState({\r\n                    tagVal: \"\"\r\n                });\r\n            }\r\n        }\r\n    }\r\n    handleTagChange(event) {\r\n        this.setState({\r\n            tagVal: event.target.value\r\n        });\r\n    }\r\n    getFilteredList() {\r\n        // This method returns a filtered array according to the name and tag search.\r\n        let filteredList1 = [];\r\n        let filteredList2 = [];\r\n        // consolidate the props data to be simple\r\n        let studentArr = this.props.studentInfo;\r\n        let queryName = this.props.nameForSearch.toUpperCase();\r\n        let queryTag = this.props.tagForSearch.toUpperCase();\r\n        // 1. do name search and generate a 1st stage filtered list\r\n        if (queryName === \"\") {\r\n            filteredList1 = studentArr;\r\n        } else {\r\n            for (let x = 0; x < studentArr.length; x++) {\r\n                if (studentArr[x].firstName.toUpperCase().includes(queryName) || studentArr[x].lastName.toUpperCase().includes(queryName)) {\r\n                    filteredList1.push(studentArr[x]);\r\n                }\r\n            }\r\n        }\r\n        // 2. do tag search and generate a 2nd stage filtered list based on the 1st stage list\r\n        if (queryTag === \"\") {\r\n            filteredList2 = filteredList1;\r\n        } else {\r\n            for (let y = 0; y < filteredList1.length; y++) {\r\n                let tagArr = filteredList1[y].tags;\r\n                for (let z = 0; z < tagArr.length; z++) {\r\n                    if (tagArr[z].toUpperCase().includes(queryTag)) {\r\n                        filteredList2.push(filteredList1[y]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 3. return the final filtered array\r\n        return filteredList2;\r\n    }\r\n    render() {\r\n        let filteredList = this.getFilteredList();\r\n        if (filteredList.length === 0) {\r\n            return (\r\n                <ul className=\"itemPart\">\r\n                    <li className=\"noMatch\">No result matches the filter condition :(</li>\r\n                </ul>\r\n            );\r\n        }\r\n        return (\r\n            <ul className=\"itemPart\">\r\n                {\r\n                    filteredList.map((student, index) => {\r\n                        return (\r\n                            <li key={student.firstName + student.lastName}>\r\n                                <div className=\"upperBox\">\r\n                                    <div className=\"leftSec\">\r\n                                        <img src={student.pic} alt=\"img not accessible\" />\r\n                                    </div>\r\n                                    <div className=\"rightSec\">\r\n                                        <h1>{student.firstName} {student.lastName}</h1>\r\n                                        <p>Email: {student.email}</p>\r\n                                        <p>Company: {student.company}</p>\r\n                                        <p>Skill: {student.skill}</p>\r\n                                        <p>Average: {this.getAverage(student.grades)} %</p>\r\n                                    </div>\r\n                                    <div className=\"expand-btn\" onClick={() => this.handleClick(student.email)}>{student.showMore ? '' : ''}</div>\r\n                                </div>\r\n                                <div className=\"lowerBox\" style={student.showMore ? this.state.styObj2 : this.state.styObj1}>\r\n                                    <div className=\"contentBox\">\r\n                                        {\r\n                                            student.grades.map((grade, i) => (\r\n                                                <p key={i}>Test {i + 1}:<span>{grade}%</span></p>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"tagBox\">\r\n                                        {\r\n                                            student.tags.map((tag, tag_index) => (\r\n                                                <div className=\"tag\" key={tag + tag_index}>{tag}</div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"addTagBox\">\r\n                                        <input type=\"text\" placeholder=\"add a tag\" onKeyUp={(event) => this.handleEnter(student.email, event)} onChange={this.handleTagChange} value={this.state.tagVal} className=\"add-tag-input\" />\r\n                                    </div>\r\n                                </div>\r\n                                <hr className=\"divider\" />\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect((state) => {\r\n    return {\r\n        studentInfo: state.studentInfo,\r\n        nameForSearch: state.nameForSearch,\r\n        tagForSearch: state.tagForSearch\r\n    };\r\n}, {\r\n    toggleShowMore: toggleShowMore,\r\n    addTag: addTag\r\n})(ItemPart);","import React from 'react';\r\nimport '../styles/list-part.css';\r\nimport ItemPart from './ItemPart.jsx';\r\n\r\nexport default class ListPart extends React.Component {\r\n    render(){\r\n        return (\r\n            <div id=\"listContainer\">\r\n                <ItemPart></ItemPart>\r\n            </div>\r\n        );    \r\n    }\r\n}","import React from 'react';\nimport './styles/app.css';\nimport QueryPart from './components/QueryPart.jsx';\nimport ListPart from './components/ListPart.jsx';\nimport { connect } from 'react-redux';\nimport { makeRequest } from './redux/actions.js';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div id=\"app\" >\n        <QueryPart></QueryPart>\n        <ListPart></ListPart>\n      </div>\n    );\n  }\n  componentDidMount() {\n    // Upon app mount, make api request\n    this.props.makeRequest();\n  }\n}\n\nexport default connect(null, {\n  makeRequest: makeRequest\n})(App);","let initialState = {\r\n    studentInfo: [],\r\n    nameForSearch: \"\",\r\n    tagForSearch: \"\"\r\n};\r\n\r\nexport default initialState;","import initialState from \"./state.js\";\r\n\r\nfunction myReducer(previousState = initialState, action) {\r\n    // Make sure to clone the deeply nested array/object inside the outer array/object\r\n    let nextState = { ...previousState, studentInfo: [...previousState.studentInfo] };\r\n    switch (action.type) {\r\n        case \"UPDATE_STATE\":\r\n            for (let i = 0; i < action.studentArr.length; i++) {\r\n                let studentObj = {\r\n                    city: action.studentArr[i].city,\r\n                    company: action.studentArr[i].company,\r\n                    email: action.studentArr[i].email,\r\n                    firstName: action.studentArr[i].firstName,\r\n                    grades: action.studentArr[i].grades,\r\n                    id: action.studentArr[i].id,\r\n                    lastName: action.studentArr[i].lastName,\r\n                    pic: action.studentArr[i].pic,\r\n                    skill: action.studentArr[i].skill,\r\n                    showMore: false,\r\n                    tags: []\r\n                };\r\n                nextState.studentInfo.push(studentObj);\r\n            }\r\n            return nextState;\r\n        case \"TOGGLE_SHOW_MORE\":\r\n            for (let x = 0; x < nextState.studentInfo.length; x++) {\r\n                if (nextState.studentInfo[x].email === action.emailMark) {\r\n                    nextState.studentInfo[x].showMore = !nextState.studentInfo[x].showMore;\r\n                    break;\r\n                }\r\n            }\r\n            return nextState;\r\n        case \"UPDATE_NAME_FOR_SEARCH\":\r\n            nextState.nameForSearch = action.newName;\r\n            return nextState;\r\n        case \"UPDATE_TAG_FOR_SEARCH\":\r\n            nextState.tagForSearch = action.newTag;\r\n            return nextState;\r\n        case \"ADD_TAG\":\r\n            for (let x = 0; x < nextState.studentInfo.length; x++) {\r\n                if (nextState.studentInfo[x].email === action.emailMark) {\r\n                    nextState.studentInfo[x].tags.push(action.tagContent);\r\n                    break;\r\n                }\r\n            }\r\n            return nextState;\r\n        default:\r\n            return previousState;\r\n    }\r\n}\r\n\r\nexport default myReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport myReducer from './reducers.js';\r\nimport myThunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const reduxStore = createStore(myReducer, composeEnhancers(\r\n    applyMiddleware(myThunk)\r\n));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { reduxStore } from './redux/store.js';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={reduxStore}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}